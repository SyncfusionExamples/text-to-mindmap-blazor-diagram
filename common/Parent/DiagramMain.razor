@using MindMap.Shared
@namespace MindMap

<div id="diagrambuilder-container" style="visibility:visible;" class=@DiagramBuilderClassName>
    <DiagramMenuBar @ref="@MenuBar"></DiagramMenuBar>
    <DiagramToolBar @ref="@Toolbar"></DiagramToolBar>
    <div class='row content' style="padding-top:0px">
        <div class='main-content' role='main'>
            <DiagramMainContent @ref="@DiagramContent"></DiagramMainContent>
            <div id="shortcutDiv" style="width: 400px;height: 420px;padding: 10px;background-color: #fff7b5;border: 1px solid #fff7b5;position: absolute;margin:3px; top: 36px; left: 250px; display: @ShowShortCutKey">
                <div id="closeIconDiv" style="float: right;width: 22px;height: 22px;border: 1px solid #fff7b5;" onclick="@ShowHideShortcutKey">
                    <span class="sf-icon-Close" style="font-size: 10px; cursor: pointer"></span>
                </div>
                <div><span class="db-html-font-medium">Quick shortcuts</span></div>
                <div style="padding-top: 10px">
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Tab : </span><span class="db-html-font-normal">Add a subtopic to the left</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Shift + Tab : </span><span class="db-html-font-normal">Add a subtopic to the right</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Enter : </span><span class="db-html-font-normal">Add a new sibling child</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Delete / Backspace : </span><span class="db-html-font-normal">Delete a topic</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Arrow(Up, Down, Left, Right) : </span><span class="db-html-font-normal">Navigate between topics</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">F2 : </span><span class="db-html-font-normal">Edit a topic</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Esc : </span><span class="db-html-font-normal">End text editing</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Ctrl + B : </span><span class="db-html-font-normal">To make text bold</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Ctrl + I : </span><span class="db-html-font-normal">To make text Italic </span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Ctrl + U : </span><span class="db-html-font-normal">Underline the text</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">F8 : </span><span class="db-html-font-normal">To Fit the diagram into the viewport</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">F1 : </span><span class="db-html-font-normal">Show/Hide shortcut Key</span>
                        </li>
                    </ul>
                </div>
            </div>
            <div class=@PropertyPanelClassName style="overflow:auto;">
                <MindMapPropertyContainer @ref="@MindMapPropertyPanel"></MindMapPropertyContainer>
            </div>
        </div>
    </div>
</div>

@code {

    /// <summary>
    /// Represents the class name for the DiagramBuilder container.
    /// </summary>
    private string DiagramBuilderClassName = "diagrambuilder-container hide-properties";

    /// <summary>
    /// Represents the visibility of the shortcut key display.
    /// </summary>
    public string ShowShortCutKey = "none";

    /// <summary>
    /// Represents the class name for the Property Panel container.
    /// </summary>
    private string PropertyPanelClassName = "db-property-editor-container";

    /// <summary>
    /// Represents the reference to the Parent MainLayout.
    /// </summary>
    public MainLayout Parent;

    /// <summary>
    /// Represents the DiagramMainContent instance.
    /// </summary>
    public DiagramMainContent DiagramContent;

    /// <summary>
    /// Represents the DiagramMenuBar instance.
    /// </summary>
    public DiagramMenuBar MenuBar;

    /// <summary>
    /// Represents the DiagramToolBar instance.
    /// </summary>
    public DiagramToolBar Toolbar;

    /// <summary>
    /// Represents the MindMapPropertyContainer instance.
    /// </summary>
    public MindMapPropertyContainer MindMapPropertyPanel;

    /// <summary>
    /// Gets or sets the injected IJSRuntime instance.
    /// </summary>
    [Inject]
    protected IJSRuntime jsRuntime { get; set; }
    /// <summary>
    /// Method invoked after each time the component has been rendered.
    /// </summary>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            if (this.MenuBar != null)
                this.MenuBar.Parent = this;
            if (this.DiagramContent != null)
                this.DiagramContent.Parent = this;
            if (this.Toolbar != null)
                this.Toolbar.Parent = this;
            if (this.MindMapPropertyPanel != null)
                this.MindMapPropertyPanel.Parent = this;
        }
    }
    /// <summary>
    /// This method is used show or hide the shortcut key.
    /// </summary>
    public void ShowHideShortcutKey()
    {
        if (this.DiagramContent.DisplayTreeViewNodes == "none")
        {
            ShowShortCutKey = ShowShortCutKey == "none" ? "block" : "none";
            int shortcutIndex = MenuBar.WindowMenuItems.FindIndex(item => item.Text == "Show Shortcuts");
            MenuBar.WindowMenuItems[shortcutIndex].IconCss = MenuBar.WindowMenuItems[shortcutIndex].IconCss == "sf-icon-blank" ? "sf-icon-Selection" : "sf-icon-blank";
            StateChanged();
        }
    }
    /// <summary>
    /// This method is used refresh the whole sample.
    /// </summary>
    public void StateChanged()
    {
        StateHasChanged();
    }

}
